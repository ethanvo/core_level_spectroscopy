    CPU time for get_k_kpts: make_kpt ki>=kj (0,*)      6.32 sec, wall time      0.43 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (1,*)     16.94 sec, wall time      0.75 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (2,*)     29.29 sec, wall time      0.97 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (3,*)     36.56 sec, wall time      1.18 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (4,*)     53.05 sec, wall time      1.70 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (5,*)     59.43 sec, wall time      1.96 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (6,*)     63.67 sec, wall time      2.05 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (7,*)     69.77 sec, wall time      2.23 sec
Monkhorst pack size [2 2 2] ew_eta 2.0312209471041576 ew_cut 3.463973550287249
Ewald components = 0, -1.14616786107368, 1.03489448450362
    CPU time for get_j pass 1     20.14 sec, wall time      0.72 sec
    CPU time for get_j pass 2      6.16 sec, wall time      0.41 sec
    CPU time for vj and vk    366.31 sec, wall time     12.57 sec
    CPU time for vnuc pass1: analytic int    498.00 sec, wall time     15.87 sec
    CPU time for contracting Vnuc [0:729]     67.36 sec, wall time      2.13 sec
    CPU time for contracting Vnuc     67.36 sec, wall time      2.13 sec
    CPU time for get_nuc    565.45 sec, wall time     18.00 sec
Ewald components = 1.25967104982813e-135, -881.045459580493, 778.181077139905
    CPU time for vnuc pass1: analytic int    497.26 sec, wall time     15.77 sec
    CPU time for contracting Vnuc [0:729]     69.93 sec, wall time      2.21 sec
    CPU time for contracting Vnuc     69.93 sec, wall time      2.21 sec
    CPU time for get_nuc    567.29 sec, wall time     17.98 sec
E1 = (-615.4127438523657+1.237452843901872e-16j)  E_coul = (135.50264159639914+1.3542803550031927e-17j)
using incore ERI storage
    CPU time for CCSD integral transformation   7806.29 sec, wall time    253.69 sec
    CPU time for EOM-CCSD shared one-electron intermediates     24.80 sec, wall time      0.79 sec
IMDS key to save: Loo , type: <class 'numpy.ndarray'>
IMDS key to save: Lvv , type: <class 'numpy.ndarray'>
IMDS key to save: Fov , type: <class 'numpy.ndarray'>
Made 1e intermediates
