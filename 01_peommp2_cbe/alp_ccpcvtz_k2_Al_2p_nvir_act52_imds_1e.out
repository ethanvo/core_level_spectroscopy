    CPU time for get_k_kpts: make_kpt ki>=kj (0,*)      5.16 sec, wall time      0.37 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (1,*)     21.19 sec, wall time      0.97 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (2,*)     30.00 sec, wall time      1.00 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (3,*)     47.76 sec, wall time      1.72 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (4,*)     54.46 sec, wall time      1.81 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (5,*)     61.50 sec, wall time      1.96 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (6,*)     64.35 sec, wall time      2.07 sec
    CPU time for get_k_kpts: make_kpt ki>=kj (7,*)     73.96 sec, wall time      2.40 sec
Monkhorst pack size [2 2 2] ew_eta 2.0312209471041576 ew_cut 3.463973550287249
Ewald components = 0, -1.14616786107368, 1.03489448450362
    CPU time for get_j pass 1     20.31 sec, wall time      0.66 sec
    CPU time for get_j pass 2      6.35 sec, wall time      0.40 sec
    CPU time for vj and vk    390.34 sec, wall time     13.54 sec
    CPU time for vnuc pass1: analytic int    495.53 sec, wall time     19.47 sec
    CPU time for contracting Vnuc [0:729]     68.62 sec, wall time      3.03 sec
    CPU time for contracting Vnuc     68.62 sec, wall time      3.04 sec
    CPU time for get_nuc    564.23 sec, wall time     22.51 sec
Ewald components = 1.25967104982813e-135, -881.045459580493, 778.181077139905
    CPU time for vnuc pass1: analytic int    497.69 sec, wall time     18.57 sec
    CPU time for contracting Vnuc [0:729]     74.50 sec, wall time      2.37 sec
    CPU time for contracting Vnuc     74.50 sec, wall time      2.38 sec
    CPU time for get_nuc    572.30 sec, wall time     20.95 sec
E1 = (-615.4127438523659+1.237452843906378e-16j)  E_coul = (135.50264159639903+1.3542803550014044e-17j)
using incore ERI storage
    CPU time for CCSD integral transformation   9794.70 sec, wall time    343.97 sec
    CPU time for EOM-CCSD shared one-electron intermediates    105.63 sec, wall time      3.65 sec
IMDS key to save: Loo , type: <class 'numpy.ndarray'>
IMDS key to save: Lvv , type: <class 'numpy.ndarray'>
IMDS key to save: Fov , type: <class 'numpy.ndarray'>
Made 1e intermediates
